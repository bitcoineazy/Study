<Container>:
    #ориентация
    orientation: 'vertical'
    #padding - расстояние от границ контейнера до его содержимого
    padding: 50
    #spacing - расстояние между кнопками(объектами)

    # size - (свойство) - кортеж, определяет размер виджета в пикселях
    # size_hint - (свойство) - определяет размер виджета в процентах от свободного места которое предоставляет ему родительский контейнер
    (пропорциональный размер виджета в %)
    диапазон от 0 до 1 (0.5 - 50%), по умолчанию size_hint равняется 1,1 (x,y) (100% по гор. и 100% по вертикали)

size и size_hint противоположны по значению, указываем либо size либо size_hint,
у свойства size_hint всегда приоритет действия (значит, что в тех ситуациях, где нужно использовать
именно фиксированный размер - size , мы должны свойству size_hint присвоить значение : None, None

Рациональней использовать size_hint, из-за того, что дисплеи мобильных устройств разные по кол-ву пикселей
(чтобы интерфейсы не меняли свой вид в зависимости от устройства) - Адаптивность

Когда мы говорим об адаптивности - разные лэйауты могут определять размер виджетов по разному,
например - boxlayout, есть два варианта ориентации - вертикальная, горизонтальная.
При вертикальной ориентации он берет под контроль размер виджетов по вертикали -
можем указать размер виджета только по горизонтали.

Механика -
<Container>:
    orientation: 'vertical'
    Button:
        size_hint: 1, 0,5
        text: 'Hello'
    Button: #(size_hint - по умолчанию = 1,1)
        text: 'Bye'

Мы указали size_hint (x,y) = 1, 0.5 и хотим чтобы виджет уполовинился по вертикали,
но kivy считает его размер (при использовании вертикальной ориентации), как =
0.5(первый ребенок(кнопка 'hello)' / 0.5 + 1(размер 1 ребенка + 2 ребенка(второй ребеной 1 по умолчанию) = 0.33
Как решить?
Если boxlayout контролирует высоту виджета в вертикальной ориентации и широты в горизонтальной, то
ненужно его насиловать! для определения высоты можно использовать padding, spacing и тд. естественным образом

Позиционирования - положение виджетов на лэйауте.
Определяется свойством pos и pos_hint
pos = пиксели(фиксированный) 0,0 - нижний левый угол
pos_hint = %(пропорциональный)
На примере floatlayout:
<FloatPosing>:
    orientation: 'vertical'
    Button:
        size_hint: 0.3, 0.3
        pos: 100, 100 #расположение элементов, не адаптивно
        text: 'First'

    Button:
        size_hint: 0.2, 0.2
        pos: 400, 100
        text: 'Second'

pos распологает фиксированно по пикселям соответственно - не адаптивно по разные экраны!
pos_hint - словарь, который определяет расположение виджета внутри его родители в процентах от 0 до 1 (1 - 100%)
Ключи свойства pos_hint :
по горизонтали : x(лево), center_x(центр), right(право)
по вертикали: y(низ), center_y(центр), top(вверх)

Как работает .kv файл?
Это просто текстовый файл, который kivy парсит своим специальным парсером и этот парсер на основе описания
.kv файла создает дерево объектов python и к этому дереву у нас есть доступ.



